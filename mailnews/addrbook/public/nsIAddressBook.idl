/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIRDFCompositeDataSource.idl"
#include "nsIAddrDatabase.idl"
#include "nsISupportsArray.idl"

interface nsIDOMWindow;
interface nsIFileSpec;
interface nsIAbDirectory;
interface nsIAbCard;

[scriptable, uuid(a5996dae-92a0-4caf-8e3e-3cfa5ed5b555)]
interface nsIAddressBook : nsISupports 
{
  void newAddressBook(in nsIAbDirectoryProperties aProperties);
  void modifyAddressBook(in nsIRDFDataSource aDS, in nsIAbDirectory aParentDir, in nsIAbDirectory aDirectory, in nsIAbDirectoryProperties aProperties);
  void deleteAddressBooks(in nsIRDFDataSource aDS, in nsISupportsArray aParentDir, in nsISupportsArray aResourceArray);
  void exportAddressBook(in nsIDOMWindow aParentWin, in nsIAbDirectory aDirectory);
  /**
   * Migrates a 4x ldif address book to our format.
   *
   * @param       aFileSpec       The source file to import
   *    
   * @param       aMigrating      If PR_TRUE then the preferences are not
   *                              created for the address book. If PR_FALSE,
   *                              then the preferences will be created for the
   *                              address book.
   *    
   * @param       aStoreLocAsHome If PR_TRUE then the location will be stored
   *                              as the home address, otherwise it will be
   *                              stored as the company address.
   *    
   */
  void migrate4xAb(in nsIFileSpec aFileSpec, in boolean aMigrating, in boolean aStoreLocAsHome);

  /**
   * Converts a Netscape NA2 file to an LDIF file. Will only work on Commercial
   * builds.
   *
   * @param       srcFileSpec     The source file to convert
   *
   * @param       dstFileSpec     The destination file for the conversion
   *
   */
  void convertNA2toLDIF(in nsIFileSpec srcFileSpec, in nsIFileSpec dstFileSpec);
  nsIAddrDatabase getAbDatabaseFromURI(in string URI);
  boolean mailListNameExists(in wstring name);
  nsIAbCard escapedVCardToAbCard(in string escapedVCardStr);
  string abCardToEscapedVCard(in nsIAbCard aCard);
  void convert4xVCardPrefs(in string prefRoot, out string escapedVCardStr);
};


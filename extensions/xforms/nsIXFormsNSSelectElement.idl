/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla XForms support.
 *
 * The Initial Developer of the Original Code is
 * Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Alexander Surkov <surkov.alexander@gmail.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMNode;
interface nsIDOMNodeList;

/**
 * Defines additional post-spec. methods for the xforms:select element.
 */

[scriptable, uuid(2740b6ce-a5cc-432d-882e-56290cf6389f)]
interface nsIXFormsNSSelectElement : nsISupports
{
  /**
   * Get array of selected xforms:item elements.
   */
  readonly attribute nsIDOMNodeList selectedItems;

  /**
   * Select xforms:item element. If xforms:select element has selected items
   * then selection for them will be saved.
   *
   * @param item - xforms:item element.
   */
  void addItemToSelection(in nsIDOMNode item);

  /**
   * Unselect xforms item element. If xforms:select element has other selected
   * items then selection for them will be saved.
   *
   * @param item - xforms:item element.
   */
  void removeItemFromSelection(in nsIDOMNode item);

  /**
   * Unselect all selected xforms:item elements.
   */
  void clearSelection();

  /**
   * Select all xforms:item elements.
   */
  void selectAll();

  /**
   * Check whether given xforms:item element is selected or not.
   *
   * @param item - xforms item element.
   *
   * @return - true if given xforms:item element is selected.
   */
  boolean isItemSelected(in nsIDOMNode item);
};

